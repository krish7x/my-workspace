frontend
---------

1. html
2. css

    framework
    ---------
    1. bootstrap
    2. material UI
    3. bulma

    superset
    ---------
    1. scss
    2. less

3. js
    framework
    ---------
    frontend
    --------
        1. react -> library
            framework
            ---------
            1.gatsby
            2.nextjs
        2. angular -> framework
        3. vuejs -> library
    
    backend
    -------
        1. nodejs
            framework
            ---------
            expressjs
    superset
    --------
        1. typescript

2. Database

    Relational DB
    --------------
        1. SQL - MySQL -> Oracle, Postgres
    
    Non-Relational DB
    ------------------
        2. NoSQL - MongoDB, DynamoDB, Firebase ..

3. Backend
   --------

   API -> MVC

    Model -> DB
        Domain/Entity
        Repository -> Hibernate JPA Repository (ORM), MyBatis, JDBC
        DTO
    View -> Page
    Controller -> Business Logic
        - Rest Controller
            - Validator
                - Service -> Interface
                    - ServiceImpl -> Class

        DTO


    nodejs
    ------
        1. Routes
        2. Controller
        3. Models
        4. Config
        5. .env


1. Java
    -> Architecture, -> JDK, JRE, JVM

    1. JVM -> Java Virtual Machine -> Provides Environment
    2. JRE -> JVM + Develpment Tools
    3. JDK -> JVM + JRE

    Orginal Docs -> Oracle Docs

    1. Basic -> OOPS
    2. Intermediate -> lambda
    


    List <String> names = new ArrayList<>();

    names.add("Lokesh")
    names.add("Krishna")
    names.add("Akash")

    //for each
    for(List<String> data : names) {

    }

    //lambdas
    names.forEach(data -> {
        //code goes here
    })